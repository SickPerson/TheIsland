#pragma once
#include "Engine.h"

// RASTERIZER STATE
D3D12_RASTERIZER_DESC g_arrRSDesc[( UINT )RS_TYPE::END] =
{
	// CULL_BACK
	D3D12_RASTERIZER_DESC
	{
		D3D12_FILL_MODE_SOLID,
		D3D12_CULL_MODE_BACK,
		FALSE,
		D3D12_DEFAULT_DEPTH_BIAS,
		D3D12_DEFAULT_DEPTH_BIAS_CLAMP,
		D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS,
		TRUE,
		FALSE,
		FALSE,
		0,
		D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF
	},

	// CULL_FRONT
		D3D12_RASTERIZER_DESC
	{
		  D3D12_FILL_MODE_SOLID // FillMode
		, D3D12_CULL_MODE_FRONT	//CullMode
		, FALSE //FrontCounterClockwise
		, D3D12_DEFAULT_DEPTH_BIAS //DepthBias
		, D3D12_DEFAULT_DEPTH_BIAS_CLAMP //DepthBiasClamp
		, D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS	//SlopeScaledDepthBias
		, TRUE	//DepthClipEnable
		, FALSE	//MultisampleEnable
		, FALSE	//AntialiasedLineEnable
		, 0		//ForcedSampleCount
		, D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF	//ConservativeRaster
	},

	// CULL_NONE
	D3D12_RASTERIZER_DESC
	{
		  D3D12_FILL_MODE_SOLID // FillMode
		, D3D12_CULL_MODE_NONE	//CullMode
		, FALSE //FrontCounterClockwise
		, D3D12_DEFAULT_DEPTH_BIAS //DepthBias
		, D3D12_DEFAULT_DEPTH_BIAS_CLAMP //DepthBiasClamp
		, D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS	//SlopeScaledDepthBias
		, TRUE	//DepthClipEnable
		, FALSE	//MultisampleEnable
		, FALSE	//AntialiasedLineEnable
		, 0		//ForcedSampleCount
		, D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF	//ConservativeRaster
	},

	// WIRE_FRAME
	D3D12_RASTERIZER_DESC
	{
		  D3D12_FILL_MODE_WIREFRAME // FillMode
		, D3D12_CULL_MODE_NONE	//CullMode
		, FALSE //FrontCounterClockwise
		, D3D12_DEFAULT_DEPTH_BIAS //DepthBias
		, D3D12_DEFAULT_DEPTH_BIAS_CLAMP //DepthBiasClamp
		, D3D12_DEFAULT_SLOPE_SCALED_DEPTH_BIAS	//SlopeScaledDepthBias
		, TRUE	//DepthClipEnable
		, FALSE	//MultisampleEnable
		, FALSE	//AntialiasedLineEnable
		, 0		//ForcedSampleCount
		, D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF	//ConservativeRaster
	},
};

// BLEND STATE
D3D12_BLEND_DESC g_arrBlendDesc[( UINT )BLEND_TYPE::END] =
{
	// DEFAULT
	D3D12_BLEND_DESC
	{
		FALSE,
		FALSE,
		D3D12_RENDER_TARGET_BLEND_DESC
		{
		FALSE, FALSE,
		D3D12_BLEND_ONE, D3D12_BLEND_ZERO, D3D12_BLEND_OP_ADD,
		D3D12_BLEND_ONE, D3D12_BLEND_ZERO, D3D12_BLEND_OP_ADD,
		D3D12_LOGIC_OP_NOOP,
		D3D12_COLOR_WRITE_ENABLE_ALL
		}
	},

	// ALPHABLEND
	D3D12_BLEND_DESC
	{
		FALSE,
		FALSE,
		D3D12_RENDER_TARGET_BLEND_DESC
		{
		TRUE, FALSE,
		D3D12_BLEND_SRC_ALPHA, D3D12_BLEND_INV_SRC_ALPHA, D3D12_BLEND_OP_ADD,
		D3D12_BLEND_ONE, D3D12_BLEND_ZERO, D3D12_BLEND_OP_ADD,
		D3D12_LOGIC_OP_NOOP,
		D3D12_COLOR_WRITE_ENABLE_ALL
		}
	},

	// ONEBLEND
	// 검정색 배경을 벗겨낼 때 사용하면 좋음
	D3D12_BLEND_DESC
	{
		FALSE,
		FALSE,
		D3D12_RENDER_TARGET_BLEND_DESC
		{
		TRUE, FALSE,
		D3D12_BLEND_ONE, D3D12_BLEND_ONE, D3D12_BLEND_OP_ADD,
		D3D12_BLEND_ONE, D3D12_BLEND_ZERO, D3D12_BLEND_OP_ADD,
		D3D12_LOGIC_OP_NOOP,
		D3D12_COLOR_WRITE_ENABLE_ALL
		}
	},
};

// DEPTH STENCIL STATE
D3D12_DEPTH_STENCIL_DESC g_arrDepthStencilDesc[(UINT )DEPTH_STENCIL_TYPE::END] =
{
	// LESS
	D3D12_DEPTH_STENCIL_DESC
	{
		TRUE,
		D3D12_DEPTH_WRITE_MASK_ALL,
		D3D12_COMPARISON_FUNC_LESS
	},

	// LESS_EQUAL
	D3D12_DEPTH_STENCIL_DESC
	{
		TRUE,
		D3D12_DEPTH_WRITE_MASK_ALL,
		D3D12_COMPARISON_FUNC_LESS_EQUAL
	},
	
	// GREATER
	D3D12_DEPTH_STENCIL_DESC
	{
		TRUE,
		D3D12_DEPTH_WRITE_MASK_ALL,
		D3D12_COMPARISON_FUNC_GREATER
	},
	
	// GREATER_EQUAL
	D3D12_DEPTH_STENCIL_DESC
	{
		TRUE,
		D3D12_DEPTH_WRITE_MASK_ALL,
		D3D12_COMPARISON_FUNC_GREATER_EQUAL
	},
	
	//NO_DEPTHTEST, 깊이 테스트 X, 깊이기록 o
	D3D12_DEPTH_STENCIL_DESC{
		FALSE,
		D3D12_DEPTH_WRITE_MASK_ALL,
		D3D12_COMPARISON_FUNC_LESS,
	},

	// NO_DEPTHTEST_NO_WRITE, 깊이테스트 X, 깊이기록 X
	D3D12_DEPTH_STENCIL_DESC{
		FALSE,
		D3D12_DEPTH_WRITE_MASK_ZERO,
	},

	//LESS_NO_WRITE, // 깊이테스트 o (Less), 깊이기록 X
	D3D12_DEPTH_STENCIL_DESC{
		TRUE,
		D3D12_DEPTH_WRITE_MASK_ZERO,
		D3D12_COMPARISON_FUNC_LESS,
	}
};